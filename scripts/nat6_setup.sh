#!/bin/sh
set -eu

# Autogenerated/managed by socks5tun updater.
PREFIX6="${PREFIX6:-fd00:0:0:8::/64}"
WAN_IF="${WAN_IF:-eth0}"

echo "[nat6_setup] prefix6=$PREFIX6 wan_if=$WAN_IF"

# 1) IPv6 forwarding (и персистентно)
sysctl -w net.ipv6.conf.all.forwarding=1 >/dev/null || true
if [ -d /etc/sysctl.d ]; then
  printf 'net.ipv6.conf.all.forwarding=1\n' >/etc/sysctl.d/99-socks5tun-ipv6.conf || true
fi

# 2) nftables only (не смешиваем с ip6tables-nft)
if command -v nft >/dev/null 2>&1; then
  # гарантируем, что таблица/цепочка есть
  nft list table ip6 nat >/dev/null 2>&1 || nft add table ip6 nat
  nft list chain ip6 nat POSTROUTING >/dev/null 2>&1 || \
    nft add chain ip6 nat POSTROUTING '{ type nat hook postrouting priority srcnat; policy accept; }'

  # Эталонная форма правила — только oifname
  RULE="ip6 saddr $PREFIX6 oifname \"$WAN_IF\" masquerade"

  # Добавим, если ещё нет точного совпадения
  if ! nft -a list chain ip6 nat POSTROUTING | grep -F "$RULE" >/dev/null; then
    nft add rule ip6 nat POSTROUTING ip6 saddr $PREFIX6 oifname "$WAN_IF" masquerade
    echo "[nat6_setup] nftables rule added"
  else
    echo "[nat6_setup] nftables rule already present"
  fi

  # Санация: удалить старые варианты с `oif "eth0"` для нашего префикса
  nft -a list chain ip6 nat POSTROUTING \
    | awk '/ip6 saddr/ && /'"$(echo "$PREFIX6" | sed 's|/|\\/|g')"'/ && / oif "/ {print $NF}' \
    | xargs -r -n1 -I{} nft delete rule ip6 nat POSTROUTING handle {} || true

else
  echo "[nat6_setup] nft not found; skipping NAT66"
fi

exit 0
